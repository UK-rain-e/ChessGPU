{"version":3,"sources":["Scripts/movement.js","Scripts/MainCameraController.js","Scripts/MousePick.js","Scripts/Cinematic.js","Scripts/EntityMove.js","Scripts/moveIndicatorColor.js"],"names":[],"mappings":"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","sourcesContent":["// movement.js\nvar Movement = pc.createScript('movement');\n\nMovement.attributes.add('speed', {\n    type: 'number',\n    default: 0.1,\n    min: 0.05,\n    max: 0.5,\n    precision: 2,\n    description: 'Controls the movement speed'\n});\n\n// initialize code called once per entity\nMovement.prototype.initialize = function () {\n    this.force = new pc.Vec3();\n};\n\n// update code called every frame\nMovement.prototype.update = function (dt) {\n    if (this.entity.rigidbody === undefined) {\n        return;\n    }\n\n    var forceX = 0;\n    var forceZ = 0;\n    var forceY = 0;\n\n    // calculate force based on pressed keys\n    if (this.app.keyboard.isPressed(pc.KEY_M)) {\n        // var tween1 = this.entity.tween(this.entity.getLocalPosition()).to(this.entity.getLocalPosition.x, this.entity.getLocalPosition.y + 5, this.entity.getLocalPosition.z, 1.0, pc.ExponentialIn).tween(this.entity.getLocalPosition()).to({x: -5, y: 0, z: -5}, 1.0, pc.ExponentialIn);\n    // this.entity.tween(this.entity.getLocalPosition()).to(this.entity.getLocalPosition.x, this.entity.getLocalPosition.y + 5, this.entity.getLocalPosition.z, 1.0, pc.ExponentialIn).tween(this.entity.getLocalPosition()).to({x: -5, y: 0, z: -5}, 1.0, pc.ExponentialIn).start();\n\n        // this.startTween.chain\n    }\n\n    if (this.app.keyboard.isPressed(pc.KEY_LEFT)) {\n        forceX = -this.speed;\n    }\n\n    if (this.app.keyboard.isPressed(pc.KEY_RIGHT)) {\n        forceX += this.speed;\n    }\n\n    if (this.app.keyboard.isPressed(pc.KEY_UP)) {\n        forceZ = -this.speed;\n    }\n\n    if (this.app.keyboard.isPressed(pc.KEY_DOWN)) {\n        forceZ += this.speed;\n    }\n\n    if (this.app.keyboard.isPressed(pc.KEY_SPACE)) {\n        if (this.entity.getPosition().y < 0.051) {\n            forceY = 50 * this.speed;\n        }\n    }\n\n    this.force.x = forceX;\n    this.force.z = forceZ;\n\n    // if we have some non-zero force\n    if (this.force.length()) {\n\n        // calculate force vector\n        var rX = Math.cos(-Math.PI * 0.25);\n        var rY = Math.sin(-Math.PI * 0.25);\n        this.force.set(this.force.x * rX - this.force.z * rY, 0, this.force.z * rX + this.force.x * rY);\n\n        // clamp force to the speed\n        if (this.force.length() > this.speed) {\n            this.force.normalize().scale(this.speed);\n        }\n    }\n    this.force.y = forceY;\n\n    // apply impulse to move the entity\n    this.entity.rigidbody.applyImpulse(this.force);\n};\n\n\n","// MainCameraController.js\nvar MainCameraController = pc.createScript('mainCameraController');\n\nMainCameraController.attributes.add('moveSpeed', { type: 'number', default: 0.003 });\nMainCameraController.attributes.add('enableCinematic', { type: 'boolean', default: true });\n\nMainCameraController.prototype.getDistance = function (pointA, pointB) {\n    var dx = pointB.x - pointA.x;\n    var dy = pointB.y - pointA.y;\n    var dz = pointB.z - pointA.z;\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n};\n\n// initialize code called once per entity\nMainCameraController.prototype.initialize = function () {\n    this.mouseDown = false;\n    this.camera = this.entity.camera;\n    this.target = new pc.Vec3(0, 0, 0); // Set the target position\n    this.scrollSpeed = 0.5;\n    this.phi = Math.atan(this.entity.getPosition().x / this.entity.getPosition().z); // Angle in the vertical plane\n\n    this.startTime = Date.now();\n\n    this.hypotenuse = this.getDistance(new pc.Vec3(0, 0, 0), new pc.Vec3(this.entity.getPosition().x, 0, this.entity.getPosition().z));\n    this.theta = Math.atan(this.entity.getPosition().y / this.hypotenuse);\n    this.distance = this.getDistance(this.entity.getPosition(), this.target);\n\n    this.enableCinematic = true;\n    if (this.enableCinematic) {\n        this.enableCinematic = false;\n        this.cinematicFlyInit();\n\n        // setTimeout(() => {\n        this.startTime = Date.now();\n        this.enableCinematic = true;\n        // }, 0);\n    }\n\n    // Attach mouse event listeners\n    this.app.mouse.on(pc.EVENT_MOUSEDOWN, this.onMouseDown, this);\n    this.app.mouse.on(pc.EVENT_MOUSEUP, this.onMouseUp, this);\n    this.app.mouse.on(pc.EVENT_MOUSEMOVE, this.onMouseMove, this);\n    this.app.mouse.on(pc.EVENT_MOUSEWHEEL, this.onMouseWheel, this);\n};\n\nMainCameraController.prototype.onMouseDown = function (event) {\n    // Check if the left mouse button is pressed\n    if (event.button === pc.MOUSEBUTTON_LEFT) {\n        this.mouseDown = true;\n    }\n};\n\nMainCameraController.prototype.onMouseUp = function (event) {\n    // Check if the left mouse button is released\n    if (event.button === pc.MOUSEBUTTON_LEFT) {\n        this.mouseDown = false;\n    }\n};\n\nMainCameraController.prototype.onMouseMove = function (event) {\n    // Check if the left mouse button is pressed\n    if (this.mouseDown) {\n        // Get the movement delta from the mouse\n        var dx = event.dx;\n        var dy = event.dy;\n\n        // Update the angles based on the mouse movement\n        var new_theta = this.theta += dy * this.moveSpeed;\n\n        this.theta = pc.math.clamp(this.theta, -Math.PI / 2, Math.PI / 2);\n\n        var new_phi = this.phi -= dx * this.moveSpeed;\n        if (new_phi > -Math.phi)\n            this.theta = pc.math.clamp(this.theta, -Math.PI / 2, Math.PI / 2);\n\n        // Calculate the new position of the camera based on spherical coordinates\n        this.updateCameraPosition();\n\n        this.entity.lookAt(0, 0, 0, 0, 1, 0);\n    }\n};\n\nMainCameraController.prototype.onMouseWheel = function (event) {\n    // Adjust the distance based on the scroll speed and direction\n    this.distance -= event.wheel * this.scrollSpeed;\n\n    // Make sure the distance is within reasonable bounds\n    this.distance = pc.math.clamp(this.distance, 1, 100);\n\n    this.updateCameraPosition();\n};\n\nMainCameraController.prototype.updateCameraPosition = function () {\n    var x = this.distance * Math.sin(this.phi) * Math.cos(this.theta);\n    var y = this.distance * Math.sin(this.theta);\n    var z = this.distance * Math.cos(this.phi) * Math.cos(this.theta);\n\n    // Set the new position of the camera\n    this.entity.setPosition(this.target.x + x, this.target.y + y, this.target.z + z);\n};\n\nMainCameraController.prototype.cinematicFlyInit = function () {\n    this.positionCurves = new pc.CurveSet([\n        [0, -27.025,\n            3, -7.38,\n            4, -3.222,\n            5, -3.203,\n            6, 1.323,\n            7.5, 2.8,\n            9, 1.748,\n            10, 1.924,\n            11.5, -3.905,\n            13, -11.151,\n            14.5, 0,\n            16.5, 0,\n            17.5, 0],\n\n        [0, 17.943,\n            3, 2.508,\n            4, 0.944,\n            5, 0.834,\n            6, 1,\n            7.5, 1.319,\n            9, 0.846,\n            10, 0.773,\n            11.5, 2.034,\n            13, 8.743,\n            14.5, 7,\n            16.5, 9,\n            17.5, 9],\n\n        [0, -4.602,\n            3, 2.615,\n            4, 2.785,\n            5, 4.909,\n            6, 5.937,\n            7.5, 2.641,\n            9, -3.444,\n            10, -8.944,\n            11.5, -10.661,\n            13, -0.192,\n            14.5, 7,\n            16.5, 9,\n            17.5, 9]\n    ]);\n\n    this.positionCurves.type = pc.CURVE_SPLINE;\n\n    this.rotationCurves = new pc.CurveSet([\n        [0, 153.66,\n            3, 157.26,\n            4, 174.79,\n            5, -4.81,\n            6, -11.61,\n            7.5, -4.2,\n            9, -2.8,\n            10, -2.8,\n            11.5, 0,\n            13, -40,\n            14.5, -45,\n            16.5, -45,\n            17.5, -45],\n\n        [0, -86.72,\n            3, -86.12,\n            4, -47.11,\n            5, -80.09,\n            6, 1.71,\n            7.5, 1.2,\n            9.0, 13.8,\n            10, 150,\n            11.5, 180,\n            13, 270,\n            14.5, 360,\n            16.5, 360,\n            17.5, 360],\n\n        [0, -180,\n            3, -180,\n            4, -180,\n            5, 0,\n            6, 0,\n            7.5, 0,\n            9, 0,\n            10, 0,\n            11.5, 0,\n            13, 0,\n            14.5, 0,\n            16.5, 0,\n            17.5, 0]\n    ]);\n\n    this.rotationCurves.type = pc.CURVE_SPLINE;\n};\n\n// update code called every frame\nMainCameraController.prototype.update = function (dt) {\n    if (this.enableCinematic) {\n\n        var timeSinceStart = (Date.now() - this.startTime) / 1000.0;\n        if (timeSinceStart > 17.5) {\n            this.enableCinematic = false;\n            this.distance = this.getDistance(this.entity.getPosition(), this.target);\n\n            this.phi = Math.atan(this.entity.getPosition().x / this.entity.getPosition().z); // Angle in the vertical plane\n            this.hypotenuse = this.getDistance(new pc.Vec3(0, 0, 0), new pc.Vec3(this.entity.getPosition().x, 0, this.entity.getPosition().z));\n            this.theta = Math.atan(this.entity.getPosition().y / this.hypotenuse);\n\n            return;\n        }\n\n        var pos = this.positionCurves.value(timeSinceStart);\n        var rot = this.rotationCurves.value(timeSinceStart);\n\n        this.entity.setPosition(pos[0], pos[1], pos[2]);\n        this.entity.setEulerAngles(rot[0], rot[1], rot[2]);\n    }\n};\n\n","// MousePick.js\nvar MousePick = pc.createScript('mousePick');\n\n\nconst BUTTON_OPEN_DURATION = 1.0;\n\n// initialize code called once per entity\nMousePick.prototype.initialize = function () {\n    this.app.mouse.on(pc.EVENT_MOUSEDOWN, this.onSelect, this);\n\n    this.app.mouse.disableContextMenu();\n    this.on('destroy', function () {\n        this.app.mouse.off(pc.EVENT_MOUSEDOWN, this.onSelect, this);\n    }, this);\n\n    this.currentPicked = null;\n    this.duration = 5.0;\n    this.mousePicker = true;\n\n    this.chessPickCallback = (piece) => { }\n\n    this.isNuking = false;\n    this.nukeOldRot = null;\n\n    this.openingButtonLid = null;\n};\n\nMousePick.prototype.setChessPickCallback = function (callback) {\n    this.chessPickCallback = callback\n}\n\nMousePick.prototype.onSelect = function (event) {\n    if (event.button !== pc.MOUSEBUTTON_LEFT) {\n        return;\n    }\n\n    var from = this.entity.camera.screenToWorld(event.x, event.y, this.entity.camera.nearClip);\n    var to = this.entity.camera.screenToWorld(event.x, event.y, this.entity.camera.farClip);\n\n    var result = this.app.systems.rigidbody.raycastFirst(from, to);\n    if (!result) {\n        console.log(\"couldn't find raycast result\")\n        return;\n    }\n\n    if (result.entity.name === \"Lid\") {\n        this.openButton(result.entity);\n        return;\n    }\n\n    if (result.entity.name === \"BigRedButton\") {\n        this.sendNukes(result.entity);\n        return;\n    }\n\n    if (result.entity.parent.parent.name === \"board\") {\n        this.chessPickCallback(result.entity)\n        return\n    }\n\n    if (result.entity.parent.name === \"pieces\") {\n        this.chessPickCallback(result.entity);\n    }\n\n\n\n    // var oldPos = result.entity.getLocalPosition();\n\n    // if (oldPos.z > -3.7) {\n    //     return;\n    // }\n\n    // var newPos = new pc.Vec3(oldPos.x, oldPos.y, oldPos.z + 10);\n\n    // this.currentPickedCurve = new pc.CurveSet(\n    //     [[\n    //         0.0, oldPos.x,\n    //         this.duration, newPos.x,\n    //     ],\n\n    //     [\n    //         0.0, oldPos.y,\n    //         this.duration, newPos.y,\n    //     ],\n\n    //     [\n    //         0.0, oldPos.z,\n    //         this.duration, newPos.z,\n    //     ],\n    //     ]\n    // );\n\n    // this.currentPicked = result.entity;\n    // this.currentPickedStartTime = Date.now();\n\n    // result.entity.rigidbody.enabled = false;\n    // result.entity.collision.enabled = false;\n\n\n    // result.entity\n    //     .tween(pos)\n    //     .to({x: pos.x, y: pos.y, z: pos.z + 2}, 1.0, pc.QuadraticInOut)\n    //     // .yoyo(true)\n    //     // .repeat(2)\n    //     .start();\n\n    // {x: pos.x, y: pos.y, z: pos.z + 2}\n\n    // 0. change raycast\n    // 1. why animation doesn't update the local position after execution ?\n    // 2. stack animations\n};\n\n\nMousePick.prototype.update = function (dt) {\n    if (this.currentPicked !== null) {\n        var delta = (Date.now() - this.currentPicked.curveStartTime) / 1000.0;\n        if (delta > this.duration) {\n            if (this.isNuking) {\n                this.currentPicked.render.enabled = false;\n                this.nukeTarget.render.enabled = false;\n            } else {\n                this.currentPicked.rigidbody.enabled = true;\n                this.currentPicked.collision.enabled = true;\n                this.isNuking = false;\n            }\n            this.currentPicked.curve = null;\n            return;\n        }\n\n        var values = this.currentPicked.curve.value(delta);\n        this.currentPicked.setLocalPosition(values[0], values[1], values[2]);\n\n        var buttonLocalPosition = this.currentPicked.button.getLocalPosition();\n        buttonLocalPosition.y = values[4];\n        this.currentPicked.button.setLocalPosition(buttonLocalPosition);\n\n        if (this.isNuking && this.currentPicked.render.enabled) {\n            this.currentPicked.findByName(\"smoke\").enabled = true;\n            var prevValues = this.currentPicked.curve.value(delta - 0.001);\n            var direction = new pc.Vec3(values[0] - prevValues[0], values[1] - prevValues[1], values[2] - prevValues[2]);\n            direction = direction.normalize();\n            var rotation = new pc.Quat().setFromDirections(new pc.Vec3(0, 0, 1), direction);\n            //     var newRot = new pc.Quat().copy(this.nukeOldRot).getEulerAngles();\n\n            //     // newRot.x = 180 - newRot.x;\n            //     newRot.y = -180 - newRot.y;\n            //     var quat = new pc.Quat();\n\n            //     quat.setFromEulerAngles(newRot);\n            //     var curPos = new pc.Quat().slerp(this.nukeOldRot, quat, values[3]);\n            this.currentPicked.setLocalRotation(rotation);\n\n            if (values[3] >= 0.99) {\n                this.currentPicked.findByName(\"smoke\").enabled = false;\n                this.currentPicked.findByName(\"blast\").enabled = true;\n\n\n                // this.currentPicked.rigidbody.type = \"static\";\n                // this.currentPicked.collision.type = \"sphere\";\n                // this.currentPicked.collision.radius = (values[3] - 0.95)*10;\n            }\n        }\n    }\n\n    if (this.openingButtonLid !== null) {\n        var delta = (Date.now() - this.openingButtonLid.curveStartTime) / 1000.0;\n        if (delta > BUTTON_OPEN_DURATION) {\n            this.openingButtonLid = null;\n            return;\n        }\n\n        var values = this.openingButtonLid.curve.value(delta);\n        var quat = new pc.Quat(values[0], values[1], values[2], values[3]);\n        this.openingButtonLid.setLocalRotation(quat);\n    }\n\n};\n\nMousePick.prototype.sendNukes = function (button) {\n    var nukeName = null;\n    var targetName = null;\n\n    if (button.parent.parent.name == \"ButtonBlack\") {\n        nukeName = \"KB\";\n        targetName = \"KW\";\n    } else {\n        nukeName = \"KW\";\n        targetName = \"KB\";\n    }\n\n    var nuke = pc.app.root.findByName(nukeName);\n    // entity.findByName(\"QB_smoke\").enabled = true;\n    var oldPos = nuke.getLocalPosition();\n\n    var nukeTarget = pc.app.root.findByName(targetName);\n\n    this.isNuking = true;\n    this.nukeOldRot = new pc.Quat().copy(nuke.getLocalRotation());\n    // var newPos = new pc.Vec3(oldPos.x, oldPos.y, oldPos.z + 10);\n    var newPos = nukeTarget.getLocalPosition();\n\n    this.currentPicked = nuke;\n    this.nukeTarget = nukeTarget;\n\n    this.currentPicked.curve = new pc.CurveSet([\n        [this.duration * 0.2, oldPos.x, this.duration * 0.6, oldPos.x * 0.7 + newPos.x * 0.3, this.duration, newPos.x],\n        [this.duration * 0.2, oldPos.y, this.duration * 0.6, oldPos.y * 0.7 + newPos.y * 0.3, this.duration, newPos.y],\n        [this.duration * 0.2, oldPos.z, this.duration * 0.6, oldPos.z + 10, this.duration, oldPos.z + 1],\n        [0.0, 0.0, this.duration * 0.1, 0.0, this.duration, 1],\n        [0.0, button.getLocalPosition().y, this.duration * 0.05, 0.55],\n    ]);\n    this.currentPicked.curve.type = pc.CURVE_SPLINE;\n    this.currentPicked.curveStartTime = Date.now();\n\n    this.currentPicked.button = button;\n\n    nuke.rigidbody.enabled = false;\n    nuke.collision.enabled = false;\n}\n\nMousePick.prototype.openButton = function (lid) {\n    if (this.openingButtonLid !== null) {\n        return;\n    }\n\n    lid = lid.parent;\n    this.openingButtonLid = lid;\n\n    var oldRot = lid.getLocalRotation();\n    var newRot = new pc.Quat();\n    newRot.setFromEulerAngles(90, 0, 0);\n\n    lid.curve = new pc.CurveSet([\n        [0.0, oldRot.x, BUTTON_OPEN_DURATION, newRot.x],\n        [0.0, oldRot.y, BUTTON_OPEN_DURATION, newRot.y],\n        [0.0, oldRot.z, BUTTON_OPEN_DURATION, newRot.z],\n        [0.0, oldRot.w, BUTTON_OPEN_DURATION, newRot.w],\n    ]);\n    lid.curveStartTime = Date.now();\n}\n\n","// Cinematic.js\nvar Cinematic = pc.createScript('cinematic');\n\n// initialize code called once per entity\nCinematic.prototype.initialize = function() {\n    \n};\n\n// update code called every frame\nCinematic.prototype.update = function(dt) {\n    \n};\n\n// swap method called for script hot-reloading\n// inherit your script state here\n// Cinematic.prototype.swap = function(old) { };\n\n// to learn more about script anatomy, please read:\n// https://developer.playcanvas.com/en/user-manual/scripting/\n\n","// EntityMove.js\nvar EntityMove = pc.createScript('entityMove');\n\nfunction isKnight(entity) {\n    return entity.name === 'NB1' ||\n        entity.name === 'NB2' ||\n        entity.name === 'NW1' ||\n        entity.name === 'NW2';\n}\n\n// initialize code called once per entity\nEntityMove.prototype.initialize = function () {\n    this.entityMove = true;\n\n    // entity\n    // curve\n    // startTime\n    this.currentlyMoved = {};\n\n    this.timings = null;\n    this.duration = null;\n\n    this.jumpHeight = 2;\n    this.initSceneEntMove = true;\n};\n\nEntityMove.prototype.postInitialize = function () {\n    // perform the cinematic greeting for the figures\n    if (!this.initSceneEntMove) {\n        return;\n    }\n    var kingW = pc.app.root.findByName('KW');\n    var pW = pc.app.root.findByName('PW5');\n    var kingB = pc.app.root.findByName('KB');\n    var pB = pc.app.root.findByName('PB5');\n\n    var ents = [kingW, kingB, pB, pW];\n\n    ents.forEach(ent => {\n        ent.rigidbody.enabled = false;\n        ent.collision.enabled = false;\n    });\n\n    kingW.setPosition(0.5, kingW.getPosition().y, 0.5);\n    pW.setPosition(-0.5, pW.getPosition().y, 0.5);\n    kingB.setPosition(0.5, kingB.getPosition().y, -0.5);\n    pB.setPosition(-0.5, pB.getPosition().y, -0.5);\n\n    this.setChessAnimationDuration(10);\n\n    setTimeout(() => {\n        this.chessPieceMove(kingW, { x: 0.5, y: kingW.getPosition().y, z: 3.5 });\n        this.chessPieceMove(kingB, { x: 0.5, y: kingW.getPosition().y, z: -3.5 });\n        this.chessPieceMove(pW, { x: 0.5, y: kingW.getPosition().y, z: 2.5 });\n        this.chessPieceMove(pB, { x: 0.5, y: kingW.getPosition().y, z: -2.5 });\n    }, 5000);\n}\n\nEntityMove.prototype.setChessAnimationDuration = function (duration) {\n    if (this.duration !== null) {\n        return;\n    }\n    this.timings = [0.0, duration / 10, duration];\n    this.duration = duration;\n}\n\nEntityMove.prototype.moveKnightTrajectory = function (entity, destinationPos) {\n    var initPos = entity.getPosition();\n    var positionsT = [\n        initPos,\n        new pc.Vec3(initPos.x, initPos.y + this.jumpHeight, initPos.z),\n        new pc.Vec3(initPos.x, initPos.y + this.jumpHeight, destinationPos.z),\n        new pc.Vec3(destinationPos.x, destinationPos.y + this.jumpHeight, destinationPos.z),\n    ];\n    this.timings[2] = this.duration * 2 / 3;\n    this.timings[3] = this.duration;\n\n    var trajectoryCurve = new pc.CurveSet(\n        [[\n            this.timings[0], positionsT[0].x,\n            this.timings[1], positionsT[1].x,\n            this.timings[2], positionsT[2].x,\n            this.timings[3], positionsT[3].x,\n        ],\n\n        [\n            this.timings[0], positionsT[0].y,\n            this.timings[1], positionsT[1].y,\n            this.timings[2], positionsT[2].y,\n            this.timings[3], positionsT[3].y,\n        ],\n\n        [\n            this.timings[0], positionsT[0].z,\n            this.timings[1], positionsT[1].z,\n            this.timings[2], positionsT[2].z,\n            this.timings[3], positionsT[3].z,\n        ],\n        ]\n    );\n    return trajectoryCurve;\n}\n\nEntityMove.prototype.movePieceLinearTrajectory = function (entity, destinationPos) {\n    var initPos = entity.getPosition();\n    var middlePos = new pc.Vec3((initPos.x + destinationPos.x) / 2, destinationPos.y + this.jumpHeight, (initPos.z + destinationPos.z) / 2);\n\n\n    var positionsT = [\n        initPos,\n        new pc.Vec3(initPos.x, initPos.y + this.jumpHeight / 2, initPos.z),\n        middlePos,\n        new pc.Vec3(destinationPos.x, destinationPos.y + this.jumpHeight / 2, destinationPos.z),\n        new pc.Vec3(destinationPos.x, initPos.y, destinationPos.z),\n    ];\n\n    var distance = this.jumpHeight * 2 + Math.sqrt(Math.pow(initPos.x - destinationPos.x, 2) + Math.pow(initPos.z - destinationPos.z, 2));\n    var timeMultiplier = this.jumpHeight / 1.4 / distance;\n    this.timings = [0.0, this.duration * timeMultiplier, this.duration / 2, this.duration * (1 - timeMultiplier), this.duration];\n\n    var trajectoryCurve = new pc.CurveSet(\n        [[\n            this.timings[0], positionsT[0].x,\n            this.timings[1], positionsT[1].x,\n            this.timings[2], positionsT[2].x,\n            this.timings[3], positionsT[3].x,\n            this.timings[4], positionsT[4].x\n        ],\n\n        [\n            this.timings[0], positionsT[0].y,\n            this.timings[1], positionsT[1].y,\n            this.timings[2], positionsT[2].y,\n            this.timings[3], positionsT[3].y,\n            this.timings[4], positionsT[4].y\n        ],\n\n        [\n            this.timings[0], positionsT[0].z,\n            this.timings[1], positionsT[1].z,\n            this.timings[2], positionsT[2].z,\n            this.timings[3], positionsT[3].z,\n            this.timings[4], positionsT[4].z\n        ],\n        ]\n    );\n    trajectoryCurve.type = pc.CURVE_SPLINE;\n    return trajectoryCurve;\n}\n\nEntityMove.prototype.getMovePieceTrajectory = function (entity, destinationPos) {\n    // if (isKnight(entity)) {\n    //     return this.moveKnightTrajectory(entity, destinationPos);\n    // }\n\n    return this.movePieceLinearTrajectory(entity, destinationPos);\n}\n\nEntityMove.prototype.chessPieceMove = function (entity, destinationPos) {\n    if (entity.parent.name !== 'pieces') {\n        return;\n    }\n\n    if (this.duration === null) {\n        throw new Exception('please set move duration');\n    }\n\n    if (entity.name in this.currentlyMoved && this.currentlyMoved[entity.name] !== null) {\n        throw new Exception('moving piece that is already being moved');\n        return;\n    }\n\n    this.currentlyMoved[entity.name] = {\n        'trajectoryCurve': this.getMovePieceTrajectory(entity, destinationPos),\n        'startTime': Date.now(),\n        'entity': entity,\n    }\n\n    entity.rigidbody.enabled = false;\n    entity.collision.enabled = false;\n};\n\n// update code called every frame\nEntityMove.prototype.update = function (dt) {\n    for (let key in this.currentlyMoved) {\n        var movedPiece = this.currentlyMoved[key];\n\n        if (movedPiece == undefined) {\n            continue;\n        }\n\n        var delta = (Date.now() - movedPiece['startTime']) / 1000.0;\n\n        if (delta > this.duration) {\n            movedPiece['entity'].rigidbody.enabled = true;\n            movedPiece['entity'].collision.enabled = true;\n            this.currentlyMoved[key] = null;\n            continue;\n        }\n\n        var pos = movedPiece['trajectoryCurve'].value(delta);\n        movedPiece['entity'].setPosition(pos[0], pos[1], pos[2]);\n    }\n};\n\nEntityMove.prototype.setCellHighlighted = function (cell, highlighted) {\n    var renderComp = cell.render;\n    if (!renderComp.material.name.endsWith(\".copy\")) {\n        renderComp.material = renderComp.material.clone();\n        renderComp.material.name = renderComp.material.name + \".copy\";\n    }\n\n    if (highlighted) {\n        renderComp.material.emissiveIntensity = 0.5;\n        renderComp.material.useLighting = false;\n    } else {\n        renderComp.material.emissiveIntensity = 0.0;\n        renderComp.material.useLighting = true;\n    }\n\n    renderComp.material.update();\n};\n\nEntityMove.prototype.setGameEnded = function (result) {\n    pc.app.root.findByName(\"EndScreen\").enabled = true;\n\n    var text = pc.app.root.findByName(\"EndScreenText\");\n\n    if (result.draw) {\n        text.element.text = \"Game ended. Draw!\";\n    } else if (result.turn == \"w\") {\n        text.element.text = \"Game ended.\\nWhite is victorious!\";\n    } else {\n        text.element.text = \"Game ended.\\nBlack is victorious!\";\n    }\n}\n\n","// moveIndicatorColor.js\nvar MoveIndicatorColor = pc.createScript('moveIndicatorColor');\n\nMoveIndicatorColor.prototype.initialize = function () {\n    var self = this;\n    this.textureIndex = 0;\n    this.textureIDs = [156898847, 156898838];\n};\n\nMoveIndicatorColor.prototype.setCurrentChessPlater = function (playerId) {\n    this.textureIndex = playerId\n    var material = pc.app.assets.get(this.textureIDs[this.textureIndex]);\n    this.entity.render.meshInstances.forEach(mesh => mesh.material = material.resource);\n};\n\nMoveIndicatorColor.prototype.changeToNextTexture = function (dt) {\n    this.setCurrentChessPlater((this.textureIndex + 1) % 2);\n};\n\n\n"]}